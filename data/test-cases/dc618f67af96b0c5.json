{"uid":"dc618f67af96b0c5","name":"test_validating_payment_page","fullName":"testCases.test_search.TestSearch#test_validating_payment_page","historyId":"efafbd65506533c345b3bd1a582eaf39","time":{"start":1707890258404,"stop":1707890280859,"duration":22455},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testCases.test_search.TestSearch object at 0x7ff823a59e10>\n\n    def test_validating_payment_page(self):\n        amazonSearchPage = AmazonSearchedPage(self.driver)\n        amazonSearchPage.validate_selected_item()\n>       amazonSearchPage.validate_payment_page(\"checkout\", \"address\")\n\ntestCases/test_search.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.amazon_search_page.AmazonSearchedPage object at 0x7ff823a298d0>, checkoutText = 'checkout', address = 'address'\n\n    def validate_payment_page(self, checkoutText, address):\n        checkout = self.driver.find_element(By.XPATH, \"//h1[normalize-space()='Checkout']\").text\n        assert checkout.lower().__contains__(checkoutText)\n        delivery_address = self.driver.find_element(By.XPATH,\n                                                    \"//h3[@class='a-color-base clickable-heading \"\n                                                    \"expand-collapsed-panel-trigger']\").text\n        # assert fail\n        assert delivery_address.lower().__contains__(address)\n        self.driver.find_element(By.XPATH, \"//input[@placeholder='Enter Code']\").send_keys(\"discount\")\n        time.sleep(1)\n        self.driver.find_element(By.XPATH, \"//input[@name='ppw-claimCodeApplyPressed']\").click()\n        coupon_failed_test = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//p[normalize-space()='The promotional code you entered is not valid.']\"))).text.lower()\n>       assert coupon_failed_test == ErrorMessage.invalid_coupon\nE       AssertionError\n\npages/amazon_search_page.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707889911252,"stop":1707889911289,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1707890236772,"stop":1707890239241,"duration":2469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"log_on_failure","time":{"start":1707890258403,"stop":1707890258403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <testCases.test_search.TestSearch object at 0x7ff823a59e10>\n\n    def test_validating_payment_page(self):\n        amazonSearchPage = AmazonSearchedPage(self.driver)\n        amazonSearchPage.validate_selected_item()\n>       amazonSearchPage.validate_payment_page(\"checkout\", \"address\")\n\ntestCases/test_search.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.amazon_search_page.AmazonSearchedPage object at 0x7ff823a298d0>, checkoutText = 'checkout', address = 'address'\n\n    def validate_payment_page(self, checkoutText, address):\n        checkout = self.driver.find_element(By.XPATH, \"//h1[normalize-space()='Checkout']\").text\n        assert checkout.lower().__contains__(checkoutText)\n        delivery_address = self.driver.find_element(By.XPATH,\n                                                    \"//h3[@class='a-color-base clickable-heading \"\n                                                    \"expand-collapsed-panel-trigger']\").text\n        # assert fail\n        assert delivery_address.lower().__contains__(address)\n        self.driver.find_element(By.XPATH, \"//input[@placeholder='Enter Code']\").send_keys(\"discount\")\n        time.sleep(1)\n        self.driver.find_element(By.XPATH, \"//input[@name='ppw-claimCodeApplyPressed']\").click()\n        coupon_failed_test = self.wait.until(EC.visibility_of_element_located(\n            (By.XPATH, \"//p[normalize-space()='The promotional code you entered is not valid.']\"))).text.lower()\n>       assert coupon_failed_test == ErrorMessage.invalid_coupon\nE       AssertionError\n\npages/amazon_search_page.py:52: AssertionError","steps":[],"attachments":[{"uid":"303dd26e0a5f6cae","name":"stdout","source":"303dd26e0a5f6cae.txt","type":"text/plain","size":148}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"log_on_failure::0","time":{"start":1707890280905,"stop":1707890281089,"duration":184},"status":"passed","steps":[],"attachments":[{"uid":"50940024d3668f2d","name":"failed_test","source":"50940024d3668f2d.png","type":"image/png","size":119574}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"setup::0","time":{"start":1707890281090,"stop":1707890281252,"duration":162},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup', 'log_on_failure')"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_search"},{"name":"subSuite","value":"TestSearch"},{"name":"host","value":"shashi-Aspire-A715-41G"},{"name":"thread","value":"27537-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_search"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup', 'log_on_failure')"]},"source":"dc618f67af96b0c5.json","parameterValues":[]}